I looked into data types on https://www.w3schools.com/sql/sql_datatypes.asp. 
I then looked into the best datatype for a password and found 
the answer of Varchar on the forum https://community.wappler.io/t/data-type-for-user-passwords/2709/2
I learned to make a composite key from https://www.geeksforgeeks.org/sql/composite-key-in-sql/
I changed a lot of the table names from my SQL diagram after I realized I named some after table types.
Also realized I forgot to add "notes" to my database diagram.
Made some test inserts to see if the table at least sort of works.
Eventually got the table and the inserts fully functional and managed to fix my syntax errors.
Edited Word Document with new names https://1drv.ms/w/c/f2447ec08a1f2c98/EVV6f6JcXXJDuhxWuVHuRFYB8kJ8RoVt5zPI96OQTDznKA?e=ObJQHi

Watched some videos on how to combine JSON and SQL
https://youtu.be/iq9XasV9Y8I?si=aXf-VWK8Otyc-hFp
https://www.youtube.com/watch?v=Gex9ab_p2OM

Code Analysis

Made all foreign keys cascading so that deleted data is permanently deleted.

Password is not yet hashed so I will have to hash it through Python. I learned the bcrypt library may be able to do it.
_________________________________________________________________________
CREATE TABLE Users (
    UserID INT PRIMARY KEY,
    Username VARCHAR(20),
    Password VARCHAR(40)
);
_________________________________________________________________________


Creates the table for storing data on the events. 
_________________________________________________________________________
CREATE TABLE Event (
    EventID INT PRIMARY KEY,
    UserID INT,
    Name VARCHAR(20),
    Color VARCHAR(6),
    Note VARCHAR(100),
    Start DATE,
    End DATE,
    EventType VARCHAR(30),
    FOREIGN KEY (UserID) REFERENCES Users(UserID) ON UPDATE CASCADE ON DELETE CASCADE
);
_________________________________________________________________________


Stores the prompts that users create.
_________________________________________________________________________
CREATE TABLE Prompt (
    PromptID INT PRIMARY KEY,
    UserID INT,
    EventID INT,
    PromptText TEXT,
    FOREIGN KEY (UserID) REFERENCES Users(UserID) ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY (EventID) REFERENCES Event(EventID) ON UPDATE CASCADE ON DELETE CASCADE
);
_________________________________________________________________________


Table meant to store the calculated dates ahead of time. It will store every single date that will be affected by a recurring event
and it should allow for overlapping with the dates and the Event ID being combined keys.
_________________________________________________________________________
CREATE TABLE Cache (
    Times DATE,
    EventID INT,
    UserID INT,
    PRIMARY KEY (Times, EventID),
    FOREIGN KEY (UserID) REFERENCES Users(UserID) ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY (EventID) REFERENCES Event(EventID) ON UPDATE CASCADE ON DELETE CASCADE
);
_________________________________________________________________________